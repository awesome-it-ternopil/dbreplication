---
- name: Checking ssh connection to slave from backup-master (backup-master)
  command: ssh -q user@downhost exit
ssh -q -o "BatchMode=yes" -i /home/sicmapp/.ssh/id_rsa <ID>@<Servername>.<domain> "echo 2>&1" && echo $host SSH_OK || echo $host SSH_NOK
local_action: shell ssh user1@{{ inventory_hostname }} "echo success"
  register: user1_enabled

- debug
  when: user1_enabled.stdout.find("success") != -1

- name: Ensure replication user exists on master. (master)
  mysql_user:
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_user.host | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}"
    state: present
#  when: >
#    (mysql_replication_role == 'master')
#    and mysql_replication_user
#    and (mysql_replication_master != '')
  register: slave_on_master

- name: Creating user slave on master (master)
  when: slave_on_master. ==

- name: Checking connection to db from backup-master
   mysql_db:
      login_user=root
      login_password=password
      login_host=B_address
      login_port=B_port
      name=B_database
      state=present
    when: dbstatus.rc == 0
...
