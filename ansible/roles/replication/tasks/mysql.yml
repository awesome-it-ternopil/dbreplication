---
debug backup name

- name: Restoring from dump (backup-master)
  become: True
  shell: "mysql -u  {{database}} < {{server_backup_storage}}/{{backup_name}}"
  when: "backup_name[-4:] == '.sql'"

- name: Restore data
  become: True
  shell: "cat {{server_backup_storage}}/{{backup_name}} | gunzip | mysql {{mysql.database}}"
  when: "backup_name[-3:] == '.gz'"

if root password = 0
debug master

- name: Configure replication on the slave.
  become: yes
  mysql_replication: >
        mode=changemaster
        master_host="{{item}}"
        master_user="{{ replication_user.name }}"
        master_password="{{ replication_user.password}}"
        master_log_file="{{ master.File }}"
        master_log_pos="{{ master.Position}}"
  with_items: "{{hostvars[groups['mariadb_master'][0]]['ansible_all_ipv4_addresses'][:2]}}"

- name: Starting replication on backup-master (backup-master)
  mysql_replication:
        mode: startslave

- name: Check slave replication status. (backup-master)
  mysql_replication:
    mode: getslave
    login_user: "{{ user }}"
    login_password: "{{ mysql.password }}"
  ignore_errors: true
  register: slave

- name:
  debug:
   msg: slave

#- name: Checking second behind master (backup-master)
...